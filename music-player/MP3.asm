;A music player for 8086 programmed in assembly
;language. It can interact with users by
;presenting the information of composition
;dynamically and offer users not only one
;compositions to play. 
;ZihanGan 2021.12.8 

_STACK SEGMENT STACK
DW 100 DUP(?)
_STACK ENDS

_DATA SEGMENT WORD PUBLIC 'DATA'
BUFFER DB 20
DB ?
DB 20 DUP(?)
OPE DB 20 DUP(?)
N3 DB "quit$"
N4 DB "auto$"
H1 DB 0DH,0AH,0DH,0AH,"Please input the first character of the name of the composition you want to listen to$"
H2 DB 0DH,0AH,"Below is the list of compositions$"
H3 DB 0DH,0AH,"Soviet March$"
H4 DB 0DH,0AH,"A Time For Us$"
H5 DB 0DH,0AH,"You can also keyboard 'n' to play them automatically$"
H6 DB 0DH,0AH,"Or quit the program by keyboarding 'q'$"
NEX DB 0DH,0AH,"$"
;苏维埃进行曲/Soviet March
N1 DB 0DH,0AH,"Soviet March$"
M1 DW 587,440,10000,440,587,440,10000,440,587,440,10000,440,587,440,10000,440
DW 587,880,932,880,784,880
DW 784,784,698,784,659,554,587,659,659,440
DW 587,880,1175,1046,932,880
DW 784,784,698,784,659,880,10000,880,10000,880,10000,880,10000,880,10000,880,10000,880,10000,880
DW 698,659,698,587,784,698,784,659
DW 880,784,880,698,784,698,784,659
DW 698,659,698,587,784,698,784,659
DW 880,784,880,698,784,698,784,659
DW 587,10000,587,554,587,440,587,659,10000,659,587,659,10000,659
DW 698,10000,698,784,880,698,784,880,10000,880,784,880,10000,880
DW 880,10000,880,784,880,587,880,932,10000,932,880,784
DW 784,880,698,784,659,587,554,523,587,659,440,-1
T1 DW 60,28,4,28,60,28,4,28,60,28,4,28,60,28,4,28
DW 60,60,30,15,15,60
DW 30,15,15,30,30,15,15,30,30,30
DW 60,60,30,15,15,60
DW 30,15,15,30,30,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14
DW 30,30,30,30,30,30,30,30
DW 30,30,30,30,30,30,30,30
DW 30,30,30,30,30,30,30,30
DW 30,30,30,30,30,30,30,30
DW 58,4,43,15,30,60,30,58,4,43,15,88,4,28
DW 58,4,43,15,30,60,30,58,4,43,15,88,4,28
DW 58,4,43,15,30,60,30,58,4,43,15,60
DW 30,60,60,60,45,15,60,45,15,30,90
;我们的时光/A Time For Us
N2 DB "A Time For Us$"
M2 DW 440,523,494,330,20000,330,392,330,440,20000
DW 440,392,349,392,20000,392,349,330,294
DW 330,294,262,294,330,440,523,494,330,20000
DW 330,392,330,440,20000
DW 440,587,494,330,523,494,440,392,523,494,440,392,440
DW 523,659,523,587,659,698,587,659,523,587
DW 466,523,440,494,392,440,20000,440,523,494,440,-1
T2 DW 30,60,30,150,5,30,60,30,150,5
DW 30,60,30,150,5,30,60,30,150
DW 15,15,60,30,150,30,60,30,150,5
DW 30,60,30,240,5
DW 30,270,240,30,120,30,30,30,30,30,90,90,240
DW 30,240,30,240,30,240,30,240,30,240
DW 30,240,30,240,30,150,30,60,30,270,30
_DATA ENDS

INIT MACRO M,T,N
LEA SI,M
LEA BP,DS:T
LEA DX,N
ENDM

CODE SEGMENT

PRINT PROC NEAR
LEA DX,H1
MOV AH,9
INT 21H
LEA DX,H2
MOV AH,9
INT 21H
LEA DX,H3
MOV AH,9
INT 21H
LEA DX,H4
MOV AH,9
INT 21H
LEA DX,H5
MOV AH,9
INT 21H
LEA DX,H6
MOV AH,9
INT 21H
LEA DX,NEX
MOV AH,9
INT 21H
RET
PRINT ENDP

INPUT PROC NEAR
LEA DX,BUFFER
MOV AH,01
INT 21H
RET
INPUT ENDP

DELAY PROC NEAR
PUSH CX
MOV CX,0FFFFH
LOOP $
POP CX
RET
DELAY ENDP

MUSIC PROC NEAR
MOV AX,0
C2:MOV DI,[SI]
CMP DI,0FFFFH
MOV AH,09H
INT 10H
;CALL DYN
JZ C4
MOV BX,DS:[BP]
PUSH AX
PUSH BX
PUSH CX
PUSH DX
PUSH DI
MOV AL,10110110B
OUT 43H,AL
MOV DX,12H 
MOV AX,34DEH
DIV DI
OUT 42H,AL
MOV AL,AH
OUT 42H,AL
IN AL,61H
MOV AH,AL
OR AL,3
OUT 61H,AL
C5:MOV CX,3314
PUSH AX
C6:IN AL,61H
AND AL,10H
CMP AL,AH
JE C6
MOV AH,AL
LOOP C6
POP AX
DEC BX
JNZ C5			
MOV AL,AH
OUT 61H,AL
POP DI
POP DX
POP CX 
POP BX
POP AX
ADD SI,2
ADD BP,2
JMP C2
C4:RET
MUSIC ENDP

DYN PROC NEAR
MOV AH,03H
INT 10H
SUB DH,1
MOV AH,2H
INT 10H
MOV AH,09H
MOV DX,CX
INT 10H
LEA DX,NEX
MOV AH,9
INT 21H
RET
DYN ENDP

MAIN PROC NEAR
ASSUME CS:CODE, DS:_DATA, SS:_STACK
MOV AX,_DATA
MOV DS,AX
HELP: CALL PRINT
CALL INPUT
CMP AL,'q'
JZ TERMINATE
CMP AL,'s'
JNZ S1
INIT M1,T1,N1
CALL MUSIC
S1:CMP AL,'a'
JNZ S2
INIT M2,T2,N2
CALL MUSIC
S2:CMP AL,'n'
JNZ HELP
INIT M1,T1,N1
CALL MUSIC
CALL DELAY
INIT M2,T2,N2
CALL MUSIC
;XOR CX,CX
;MOV CL,BUFFER+1
;LEA SI,BUFFER+2
;LEA BX,OPE
;C1: MOV AX,[SI]
;MOV [BX],AX
;INC SI
;INC BX
;DEC CL
;JNZ C1
;MOV AL,'$'
;MOV [BX],AL
;LEA DX,OPE
;MOV SI,DX
;LEA DX,N3
;MOV DI,DX
;MOV CL,BUFFER+1
;REPE CMPSB
JMP HELP
TERMINATE:MOV AH,4CH
INT 21H
MAIN ENDP

CODE ENDS
END MAIN